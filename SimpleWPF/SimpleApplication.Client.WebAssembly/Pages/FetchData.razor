@page "/fetchdata"
@inject HttpClient Http

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (Items == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Text</th>
                <th>Validation Error count</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in Items)
            {
                <tr>
                    <td>@forecast.Id</td>
                    <td>@forecast.Text</td>
                    <td>@forecast.ValidationErrors.Count()</td>
                    <td>@forecast.IsReadOnly</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private IEnumerable<RangeItem> Items;

    protected override void OnInitialized()
    {
        var Context = new SimpleApplication.Web.SampleDomainContext();
        Context.Load(Context.GetRangeQuery(), GetRangeQuery_Complete, false);
    }

    private void GetRangeQuery_Complete(LoadOperation<RangeItem> lo)
    {
        if (lo.HasError)
            lo.MarkErrorAsHandled();
        else
        {
            Items = lo.Entities;
            StateHasChanged();
        }
    }

    public class WeatherForecast
    {
        public DateTime Date { get; set; }

        public int TemperatureC { get; set; }

        public string Summary { get; set; }

        public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);
    }
}
